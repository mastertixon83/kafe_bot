#TODO: –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö
from loader import dp, bot

from aiogram.types import Message, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types
from keyboards.default import *

from aiogram.dispatcher.filters import Text

from data.config import admins
from aiogram.dispatcher import FSMContext

from states.personal import StaffCall
from utils.db_api.db_commands import DBCommands

db = DBCommands()


@dp.message_handler(Text(["üë¶ –û—Ñ–∏—Ü–∏–∞–Ω—Ç", "üë≤ –ö–∞–ª—å—è–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä"]), state="*")
async def waiter(message: Message, state: FSMContext):
    """–õ–æ–≤–ª—é –≤—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    if message.text == 'üë¶ –û—Ñ–∏—Ü–∏–∞–Ω—Ç':
        await db.update_last_activity(user_id=message.from_user.id, button='–í—ã–∑–æ–≤ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞')
        user_id = message.from_user.id
        codes = await db.get_active_codes_user(user_id)

        text = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∏–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞, –µ—Å–ª–∏ –í–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω—É–∂–Ω–æ.\n\n' \
               '(–ù–∞–ø—Ä–∏–º–µ—Ä: —Å—Ç–æ–ª 1, –ø—Ä–∏–Ω–µ—Å–∏—Ç–µ —Å—á–µ—Ç)'
        await StaffCall.waiter.set()

    elif message.text == 'üë≤ –ö–∞–ª—å—è–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä':
        await db.update_last_activity(user_id=message.from_user.id, button='–í—ã–∑–æ–≤ –∫–∞–ª—å—è–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞')
        text = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∏–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫–∞–ª—å—è–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞, –µ—Å–ª–∏ –í–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω—É–∂–Ω–æ.\n\n' \
               '(–ù–∞–ø—Ä–∏–º–µ—Ä: —Å—Ç–æ–ª 1, —Ä–∞—Å–∫—É—Ä–∏—Ç–µ –∫–∞–ª—å—è–Ω)'
        await StaffCall.hookah_master.set()

    await message.answer(text=text, reply_markup=cancel_btn, parse_mode=types.ParseMode.HTML)


@dp.message_handler(content_types=["text"], state=StaffCall)
async def waiter_go(message: types.Message, state: FSMContext):
    """–õ–æ–≤–ª—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await db.update_last_activity(user_id=message.from_user.id, button='–í—ã–∑–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
    cur_state = await state.get_state()

    separator = ""
    if "." in message.text:
        separator = '.'
    elif "," in message.text:
        separator = ","
    elif " " in message.text:
        separator = " "
    else:
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. (–ù–∞–ø—Ä–∏–º–µ—Ä: —Å—Ç–æ–ª 1, –ø—Ä–∏–Ω–µ—Å–∏—Ç–µ —Å—á–µ—Ç)")
        return

    if cur_state == 'StaffCall:waiter':
        text = "–û—Ñ–∏—Ü–∏–∞–Ω—Ç —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –í–∞–º"
        personal = '–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∞'
    elif cur_state == 'StaffCall:hookah_master':
        text = "–ö–∞–ª—å—è–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –í–∞–º"
        personal = '–ö–∞–ª—å—è–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞'

    if str(message.chat.id) in admins:
        markup = menuAdmin
    else:
        markup = menuUser

    await message.answer(text, reply_markup=markup, parse_mode=types.ParseMode.HTML)
    await state.finish()

    table_comment = message.text.split(separator)

    text = f'{table_comment[0]} (@{message.from_user.username}) –≤—ã–∑–≤–∞–ª {personal} \n\n' \
           f'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {table_comment[1]}'

    for admin in admins:
        await bot.send_message(chat_id=admin, text=text)

    await db.add_personal_request(who=personal, table_number=table_comment[0], comment=table_comment[1])
