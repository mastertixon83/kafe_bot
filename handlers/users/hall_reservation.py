from datetime import datetime, timezone

from aiogram.dispatcher import FSMContext

from loader import dp, bot, db
from aiogram import types
from aiogram.types import ReplyKeyboardRemove
from keyboards.inline.inline_buttons import admin_inline_staff, admin_inline_send_ls, \
    user_inline_approve
from keyboards.default.menu import menuUser, menuAdmin, \
    send_phone_cancel, cancel_btn
from states.restoran import TableReservation
from utils.db_api.db_commands import DBCommands

from aiogram.dispatcher.filters import Text
from data.config import admins
import logging

db = DBCommands()

logging.basicConfig(format=u'%(filename)s [LINE:%(lineno)d] #%(levelname)-8s [%(asctime)s] %(message)s',
                    level=logging.INFO)

MONTHS = [
    '–Ø–Ω–≤–∞—Ä—å',
    '–§–µ–≤—Ä–∞–ª—å',
    '–ú–∞—Ä—Ç',
    '–ê–ø—Ä–µ–ª—å',
    '–ú–∞–π',
    '–ò—é–Ω—å',
    '–ò—é–ª—å',
    '–ê–≤–≥—É—Å—Ç',
    '–°–µ–Ω—Ç—è–±—Ä—å',
    '–û–∫—Ç—è–±—Ä—å',
    '–ù–æ—è–±—Ä—å',
    '–î–µ–∫–∞–±—Ä—å',
]


### –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞
### –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
async def table_reservation_admin_butons(call, call_data, adminUsername, admin_id):
    # –í—ã–±—Ä–∞—Ç—å –∏–∑ –ë–î –∑–∞—è–≤–∫—É
    result = await db.get_order_hall_data(id=int(call_data[2]))

    res = datetime.now(timezone.utc) - result[0]['updated_at']
    user_wait = "–ì–æ—Å—Ç—å –∂–¥–∞–ª: "

    if res.days == 0:
        user_wait += f"{res.seconds // 60} –º–∏–Ω—É—Ç"
    else:
        user_wait += f"{res.days} –¥–Ω–µ–π {res.seconds // 60} –º–∏–Ω—É—Ç"

    text = ''

    if call_data[1] == 'foolrest':
        text = f"<b>–ë—Ä–æ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> @{result[0]['username']} <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ (–ü–æ–ª–Ω—ã–π –∑–∞–ª)</b>\n"
    elif call_data[1] == 'rejected':
        text = f"<b>–ë—Ä–æ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> @{result[0]['username']} <b>–æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n"
    elif call_data[1] == 'approved':
        text = f"<b>–ë—Ä–æ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> @{result[0]['username']} <b>–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</b>\n"

    text += f"(–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @{adminUsername})\n\n"
    text += user_wait + "\n"
    text += f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –î–∞—Ç–∞/–í—Ä–µ–º—è {result[0]['data_reservation'].strftime('%Y-%m-%d')} " \
            f"{result[0]['time_reservation']}\n–ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫ {result[0]['number_person']}\n"
    text += f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {result[0]['phone']}\n"
    admin_inline_send_ls.inline_keyboard[0][0]["url"] = f"https://t.me/{result[0]['username']}"
    await call.message.edit_text(text, reply_markup=admin_inline_send_ls, parse_mode=types.ParseMode.HTML)

    if call_data[1] in ['rejected', 'foolrest']:
        await bot.send_message(chat_id=call_data[0],
                               text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ —Å—Ç–æ–ª—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã.üòû –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –ø–æ–∑–∂–µ ü§ù")
    elif call_data[1] == 'approved':
        await bot.send_message(chat_id=call_data[0], text="–í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π. –ñ–¥–µ–º –≤–∞—Å :)")

    # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –≤ –ë–î
    await db.update_order_hall_status(id=int(call_data[2]), order_status=True, admin_answer=call_data[1],
                                 updated_at=datetime.now(timezone.utc), admin_id=admin_id,
                                 admin_name=f'@{adminUsername}')


### –ü–µ—Ä–≤—ã–π —à–∞–≥
@dp.message_handler(Text("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª"), state=None)
async def table_reservation(message: types.Message, state: FSMContext):
    await TableReservation.data.set()

    date = datetime.now().strftime('%d.%m.%Y').split('.')
    text = f"<b>–®–∞–≥ [1/4]</b>\n\n –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (07.10.1985) –°–µ–≥–æ–¥–Ω—è {date[0]} {MONTHS[int(date[1]) - 1]} {date[2]} –≥–æ–¥–∞"
    await message.answer(text, reply_markup=cancel_btn, parse_mode=types.ParseMode.HTML)

    async with state.proxy() as data:
        data["chat_id"] = message.chat.id
        data["user_name"] = message.from_user.username
        data["user_id"] = message.from_user.id
        data['full_name'] = message.from_user.full_name


# –õ–æ–≤–∏–º –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞—Ç–∞
@dp.message_handler(content_types=["text"], state=TableReservation.data)
async def table_reservation_time(message: types.Message, state: FSMContext):
    try:
        date = message.text
        if len(date.split('.')) == 3:
            if (len(date.split('.')[0]) == 2) and (len(date.split('.')[1]) == 2) and (len(date.split('.')[2]) == 4):
                if datetime.strptime(date, "%d.%m.%Y") < datetime.now():
                    raise Exception('data error')
                else:
                    async with state.proxy() as data:
                        data["data"] = datetime.strptime(message.text.replace(".", "-"), "%d-%m-%Y").date()
                    await TableReservation.next()

                    text = "<b>–®–∞–≥ [2/4]</b>\n\n –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß.–ú–ú, –ß–ß:–ú–ú, –ß–ß-–ú–ú –∏–ª–∏ –ß–ß –ú–ú"
                    await message.answer(text, reply_markup=cancel_btn, parse_mode=types.ParseMode.HTML)
        else:
            raise Exception("input error")
    except Exception as _ex:
        if str(_ex) == 'input error':
            text = "–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é! –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (07.10.1985)"

        elif str(_ex) == 'data error':
            text = "–í—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ –≤–æ –≤—Ä–µ–º–µ–Ω–∏? –ù–µ–ª—å–∑—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –Ω–∞ –ø—Ä–æ—à–ª–æ–µ.\n" \
                   "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (07.10.1985)"

        await message.answer(text=text)
        return


# –õ–æ–≤–∏–º –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä–µ–º—è
@dp.message_handler(content_types=["text"], state=TableReservation.time)
async def table_reservation_time(message: types.Message, state: FSMContext):
    msg = message.text
    text = ''
    data = await state.get_data()
    try:
        if len(msg) == 5:
            if " " in msg:
                msg = msg.replace(" ", ":")
            elif "." in msg:
                msg = msg.replace(".", ":")
            elif "-" in msg:
                msg = msg.replace("-", ":")

            msg = msg + ":00"

            time = datetime.strptime(msg, '%H:%M:%S').time()
            if data['data'] == datetime.now() and time < datetime.now().time():
                raise Exception('time error')
            else:
                await TableReservation.next()

                async with state.proxy() as data:
                    data["time"] = time.strftime("%H:%M:%S")

                await message.answer("<b>–®–ê–ì [3/4]</b> –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫", reply_markup=cancel_btn,
                                     parse_mode=types.ParseMode.HTML)
    except Exception as _ex:
        if str(_ex) == 'time error':
            text = "–í—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ –≤–æ –≤—Ä–µ–º–µ–Ω–∏? –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Ä–µ–º—è —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤–∞–º–∏. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–Ω–æ–≤–æ –≤ " \
                   "—Ñ–æ—Ä–º–∞—Ç–µ –ß–ß.–ú–ú, –ß–ß:–ú–ú, –ß–ß-–ú–ú –∏–ª–∏ –ß–ß –ú–ú"
        else:
            text = "–Ø –≤–∞—Å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ–Ω–∏–º–∞—é. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß.–ú–ú, –ß–ß:–ú–ú, –ß–ß-–ú–ú –∏–ª–∏ –ß–ß –ú–ú"

        await message.answer(text=text)
        return


# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫
@dp.message_handler(content_types=["text"], state=TableReservation.count_men)
async def table_reservation_time(message: types.Message, state: FSMContext):
    if message.text.isdigit():
        await TableReservation.next()

        async with state.proxy() as data:
            data["count_mans"] = int(message.text)

        await message.answer("<b>–®–ê–ì [4/4]</b> ‚¨áÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=send_phone_cancel,
                             parse_mode=types.ParseMode.HTML)

    else:
        text = "–Ø –≤–∞—Å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ–Ω–∏–º–∞—é. –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —á–µ–ª–æ–≤–µ–∫"
        await message.answer(text=text)
        return


# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@dp.message_handler(content_types=["contact", "text"], state=TableReservation.phone)
async def table_reservation_user_phone(message: types.Message, state: FSMContext):
    data = await state.get_data()
    await TableReservation.next()
    async with state.proxy() as data:
        if message.content_type == 'contact':
            if message.contact.phone_number[0] != "+":
                data["phone_number"] = "+" + message.contact.phone_number
            else:
                data["phone_number"] = message.contact.phone_number
            data["name"] = message.contact.last_name
        else:
            data["phone_number"] = message.text
            data["name"] = message.from_user.username

    text = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\n"
    # d = data["date"][:-3]
    date = data['data'].strftime('%d.%m.%Y').split('.')
    text += f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {date[0]} {MONTHS[int(date[1]) - 1]} {date[2]} –≥–æ–¥–∞ –≤  {data['time'][:-3]}\n"
    text += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {data['count_mans']}\n"
    text += f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['phone_number']}"

    await message.answer(text, reply_markup=ReplyKeyboardRemove())

    await message.answer("–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ", reply_markup=user_inline_approve)


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ,–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@dp.callback_query_handler(text=["approve_order_user", "cancel_order_user"],
                           state=TableReservation.check)
async def table_reservation_check_data(call, state: FSMContext):
    await call.answer(cache_time=60)
    if call.data == "approve_order_user":
        data = await state.get_data()

        await call.message.edit_text("–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ", reply_markup="")

        if call.message.from_user.id == admins[0]:
            ##TODO: –ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é
            await call.message.answer("‚è≥–û–¥–∏–Ω –º–æ–º–µ–Ω—Ç —Å–µ–π—á–∞—Å —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
                                      reply_markup=menuUser)
        else:
            await call.message.answer("‚è≥–û–¥–∏–Ω –º–æ–º–µ–Ω—Ç —Å–µ–π—á–∞—Å —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
                                      reply_markup=menuUser)

        text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{data['user_name']} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Å—Ç–æ–ª–∏–∫\n\n"
        date = data['data'].strftime('%d.%m.%Y').split('.')
        text += f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {date[0]} {MONTHS[int(date[1]) - 1]} {date[2]} –≥–æ–¥–∞ –Ω–∞ {data['time'][:-3]}\n"
        text += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {data['count_mans']}\n\n"
        text += f"–ò–º—è: {data['name']}\n"
        text += f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone_number']}"

        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –≤ –ë–î
        order_id = await db.add_new_order_hall(admin_id=None, order_status=False, chat_id=data['chat_id'],
                                          user_id=data['user_id'],
                                          username=data['user_name'], full_name=data['full_name'],
                                          data_reservation=data['data'], time_reservation=data['time'][:-3],
                                          number_person=data['count_mans'], phone=data['phone_number'])

        admin_inline_staff.inline_keyboard[2][0]["url"] = f"https://t.me/{data['user_name']}"
        admin_inline_staff.inline_keyboard[0][0]["callback_data"] = f"{data['chat_id']}-rejected-{order_id}"
        admin_inline_staff.inline_keyboard[0][1]["callback_data"] = f"{data['chat_id']}-approved-{order_id}"
        admin_inline_staff.inline_keyboard[1][0]["callback_data"] = f"{data['chat_id']}-foolrest-{order_id}"

        await bot.send_message(chat_id=admins[0], text=text, reply_markup=admin_inline_staff)
        await state.finish()

    elif call.data == "cancel_order_user":
        await call.message.edit_text("–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ", reply_markup="")

        text = f"<b>–®–ê–ì [1/4]</b>\n –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É\n\n–°–µ–≥–æ–¥–Ω—è {datetime.now().strftime('%d.%m.%Y')}"
        await call.message.answer(text, reply_markup=cancel_btn, parse_mode=types.ParseMode.HTML)

        await TableReservation.data.set()


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–æ–º
@dp.callback_query_handler(text_contains="approved")
async def table_reservation_admin(call):
    await call.answer(cache_time=60)

    call_data = call.data.split("-")
    adminUsername = call.from_user.username
    admin_id = call.from_user.id
    await table_reservation_admin_butons(call=call, call_data=call_data, adminUsername=adminUsername, admin_id=admin_id)


# –ü–æ–ª–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞ –ê–¥–º–Ω–∏
@dp.callback_query_handler(text_contains="foolrest")
async def table_reservation_admin_fool_rest(call):
    await call.answer(cache_time=60)

    call_data = call.data.split("-")
    adminUsername = call.from_user.username
    admin_id = call.from_user.id
    await table_reservation_admin_butons(call=call, call_data=call_data, adminUsername=adminUsername, admin_id=admin_id)


# –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–æ–º
@dp.callback_query_handler(text_contains="rejected")
async def table_reservation_admin_reject(call):
    await call.answer(cache_time=60)

    call_data = call.data.split("-")
    adminUsername = call.from_user.username
    admin_id = call.from_user.id
    await table_reservation_admin_butons(call=call, call_data=call_data, adminUsername=adminUsername, admin_id=admin_id)
