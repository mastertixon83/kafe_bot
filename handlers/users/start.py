#TODO: –ù–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–æ–º
#TODO: !!!–°–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

from keyboards.inline.dating_ikb import user_gender_ikb, user_work_ikb
from loader import dp, bot, db, logger

from aiogram.types import Message, ReplyKeyboardRemove
from aiogram import types
from keyboards.default import menuUser, menuAdmin
from aiogram.dispatcher.filters.builtin import CommandStart
from data.config import admins
from aiogram.dispatcher import FSMContext

from utils.db_api.db_commands import DBCommands
from states.dating import Dating

db = DBCommands()


@dp.message_handler(commands=['start'], state="*")
async def bot_start(message: types.Message, state: FSMContext):
    user_info = await db.get_user_info(message.from_user.id)
    user_id = str(message.from_user.id)

    if not user_info:
        if message.from_user.username == None:
            text = "–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –≤ –Ω–∞—à–µ–º —á–∞—Ç-–±–æ—Ç–µ.\n" \
                   "–í –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n" \
                   "–î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å. \n\n " \
                   "‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è –î–ª—è —ç—Ç–æ–≥–æ –∑–∞–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ /start –≤ –±–æ—Ç–µ"

            await message.answer(text=text, reply_markup=ReplyKeyboardRemove())
            return
        current_state = await state.get_state()
        if current_state is None:
            pass
        else:
            await state.finish()

        user_id = message.from_user.id
        await Dating.user_gender.set()

        text = "üëãüëãüëãüëã –†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å.\n"
        text += '–Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—à–Ω–∏–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ "–î–æ–ª–º–∞"\n\n'
        text += "–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –ø–æ–±–ª–∏–∂–µ\n"
        text += "–ö—Ç–æ –≤—ã?"
        msg = await message.answer(text=text, reply_markup=user_gender_ikb)
        try:
            args = message.get_args()
        except Exception:
            args = ""
        async with state.proxy() as data:
            data['user_id'] = user_id
            data['args'] = args
            data['msg_id'] = msg.message_id

    else:
        if user_id in admins:
            markup = menuAdmin
        else:
            markup = menuUser

        await message.answer("–ì–ª–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
        await state.finish()
        try:
            await db.update_last_activity(user_id=message.from_user.id, button='–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç')
        except Exception as _ex:
            logger.error(_ex)


@dp.callback_query_handler(text=["ug_female", "ug_male"], state=Dating.user_gender)
async def user_gender(call: types.CallbackQuery, state: FSMContext):
    """–õ–æ–≤–ª—é –≤—ã–±–æ—Ä –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""

    await Dating.user_age.set()

    if call.data == "ug_female":
        gender = "f"
    elif call.data == "ug_male":
        gender = "m"

    async with state.proxy() as data:
        data['gender'] = gender

    text = "–ó–¥–æ—Ä–æ–≤–æ üòä\n\n"
    text += "–£–∫–∞–∂–∏—Ç–µ –∫ –∫–∞–∫–æ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –í—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å"
    await call.message.edit_text(text=text)
    msg = await call.message.edit_reply_markup(reply_markup=user_work_ikb)


@dp.callback_query_handler(text=["20-30", "30-40", "40-50", "50+"], state=Dating.user_age)
async def user_work(call: types.CallbackQuery, state: FSMContext):
    """–õ–æ–≤–ª—é –≤—ã–±–æ—Ä –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    if call.data == "20-30":
        age_group = "20-30"
    elif call.data == "30-40":
        age_group = "30-40"
    elif call.data == "40-50":
        age_group = "40-50"
    elif call.data == "50+":
        age_group = "50+"

    async with state.proxy() as data:
        data['age_group'] = age_group

    data = await state.get_data()

    try:
        args = data['args']
    except Exception as _ex:
        args = ""
    if args == "":
        id_user = await db.add_new_user(gender=data['gender'], age_group=data['age_group'])
    else:
        id_user = await db.add_new_user(referral=args, gender=data['gender'],
                                        age_group=data['age_group'])

    try:
        await bot.delete_message(chat_id=call.message.from_user.id, message_id=data['msg_id'])
    except Exception as _ex:
        logger.error(_ex)

    text = "–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏ 10% –æ—Å—Ç–∞–ª—Å—è –ª–∏—à—å –æ–¥–∏–Ω —à–∞–≥. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞—Ä—Ç—É üí≥"
    if id in admins:
        await call.message.edit_text(text=text)
        text = "–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å–∫—Ä—ã—Ç—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üéõ –≤ –ø—Ä–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É"
        await call.message.answer(text=text, reply_markup=menuAdmin)
    else:
        await call.message.edit_text(text=text)
        text = "–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å–∫—Ä—ã—Ç—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üéõ –≤ –ø—Ä–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É"
        await call.message.answer(text=text, reply_markup=menuUser)

    await state.finish()
